name: Build and Deploy to Cloud Run
on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  GAR_LOCATION: ${{ vars.REGION_ID }} # TODO: update Artifact Registry location
  REPOSITORY: ${{ vars.REPOSITORY }}
  SERVICE: ${{ vars.SERVICE }} # TODO: update Cloud Run service name
  REGION: ${{ vars.REGION_ID }} # TODO: update Cloud Run service region

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify -DskipTests=true

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ vars.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ vars.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            DB_NAME=${{ vars.DB_NAME }}
            INSTANCE_CONNECTION_NAME=${{ vars.INSTANCE_CONNECTION_NAME }}
            DB_USERNAME=${{ vars.DB_USERNAME }}
            DB_PASSWORD=${{ vars.DB_PASSWORD }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
